inherit_gem:
  rubocop-shopify: rubocop.yml

require:
  - rubocop-angellist
  - rubocop-graphql
  - rubocop-performance
  - rubocop-rails
  - rubocop-rake
  - rubocop-rspec
  - rubocop-sorbet
  - rubocop-thread_safety

AllCops:
  TargetRailsVersion: 7.0
  TargetRubyVersion: 3.3
  Exclude:
    - app/views/**/* # Dont think this is necessary butâ€¦ whatever
    - bin/**/*
    - db/**/*
    - frontend/**/*
    - node_modules/**/*
    - public/**/*
    - script/**/*
    - sorbet/**/*
    - test/**/*
    - tmp/**/*
    - vendor/**/*

Angellist:
  Enabled: true

# Add Rubocop rules we want to override below, sort them alphabetically

GraphQL/ArgumentDescription: { Enabled: false }
GraphQL/ArgumentName: { Enabled: false }
GraphQL/ExtractType: { Enabled: false }
GraphQL/FieldDescription: { Enabled: false }
GraphQL/FieldName: { Enabled: false }
GraphQL/FieldMethod: { Enabled: true, AutoCorrect: false }
GraphQL/ObjectDescription: { Enabled: false }

Lint/AssignmentInCondition: { Enabled: true, AllowSafeAssignment: false }
Lint/SafeNavigationChain:
  Enabled: true
  AllowedMethods: ['present?', 'blank?', 'presence', 'try', 'in?', 'to_money', 'to_d', 'nil?']

Layout/EmptyLineAfterGuardClause: { Enabled: true }
Layout/LineLength: { Enabled: false }
Layout/SpaceInsideBlockBraces: { Enabled: true, }
Layout/TrailingEmptyLines: { Enabled: true, EnforcedStyle: final_newline }

Naming/InclusiveLanguage: { Enabled: false }
Naming/PredicateName: { Enabled: false }

Rails/Delegate: { Enabled: false }

RSpec/ExampleLength: { Enabled: false }
RSpec/MultipleMemoizedHelpers: { Enabled: false }
RSpec/MessageSpies: { Enabled: false }
RSpec/MultipleExpectations: { Enabled: false }
RSpec/StubbedMock: { Enabled: false }
RSpec/SpecFilePathSuffix: { Severity: error }

Sorbet/EnforceSigilOrder: { Enabled: false }
Sorbet/FalseSigil: { Enabled: false }
Sorbet/HasSigil:
  Enabled: true
  SuggestedStrictness: 'true'
  MinimumStrictness: 'false'

Style/BlockDelimiters: { Enabled: true }
Style/CommentAnnotation: { Enabled: false }
Style/DateTime: { Enabled: true, AllowCoercion: false }
Style/GuardClause: { Enabled: true }
Style/InverseMethods: { Enabled: true, Safe: true }
Style/InvertibleUnlessCondition: { Enabled: false }
Style/MethodCallWithArgsParentheses: { Enabled: false }
Style/NegatedIf: { Enabled: false }
Style/ClassAndModuleChildren: { Enabled: true, EnforcedStyle: compact }
Style/OpenStructUse: { Enabled: false }
Style/SafeNavigation: { Enabled: false }
Style/StringLiterals: { Enabled: true, EnforcedStyle: single_quotes }
Style/StringLiteralsInInterpolation: { Enabled: true, EnforcedStyle: single_quotes }
Style/TrailingCommaInArguments: { Enabled: true, EnforcedStyleForMultiline: consistent_comma }
Style/TrailingCommaInBlockArgs: { Enabled: true }
Style/TrivialAccessors: { Enabled: false }
Style/WhileUntilModifier: { Enabled: false }
Style/WordArray: { Enabled: false }
