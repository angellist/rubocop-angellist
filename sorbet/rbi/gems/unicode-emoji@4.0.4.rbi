# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `unicode-emoji` gem.
# Please instead update this file by running `bin/tapioca gem unicode-emoji`.


module Unicode; end

module Unicode::Emoji
  class << self
    def list(key = T.unsafe(nil), sub_key = T.unsafe(nil)); end
    def properties(char); end

    private

    def get_codepoint_value(char); end
  end
end

Unicode::Emoji::CANCEL_TAG = T.let(T.unsafe(nil), Integer)
Unicode::Emoji::CLDR_VERSION = T.let(T.unsafe(nil), String)
Unicode::Emoji::DATA_DIRECTORY = T.let(T.unsafe(nil), String)
Unicode::Emoji::EMOJI_CHAR = T.let(T.unsafe(nil), Array)
Unicode::Emoji::EMOJI_COMPONENT = T.let(T.unsafe(nil), Array)
Unicode::Emoji::EMOJI_KEYCAPS = T.let(T.unsafe(nil), Array)
Unicode::Emoji::EMOJI_KEYCAP_SUFFIX = T.let(T.unsafe(nil), Integer)
Unicode::Emoji::EMOJI_MODIFIERS = T.let(T.unsafe(nil), Array)
Unicode::Emoji::EMOJI_MODIFIER_BASES = T.let(T.unsafe(nil), Array)
Unicode::Emoji::EMOJI_PRESENTATION = T.let(T.unsafe(nil), Array)
Unicode::Emoji::EMOJI_TAG_BASE_FLAG = T.let(T.unsafe(nil), Integer)
Unicode::Emoji::EMOJI_VARIATION_SELECTOR = T.let(T.unsafe(nil), Integer)
Unicode::Emoji::EMOJI_VERSION = T.let(T.unsafe(nil), String)
Unicode::Emoji::EXTENDED_PICTOGRAPHIC = T.let(T.unsafe(nil), Array)
Unicode::Emoji::EXTENDED_PICTOGRAPHIC_NO_EMOJI = T.let(T.unsafe(nil), Array)
Unicode::Emoji::INDEX = T.let(T.unsafe(nil), Hash)
Unicode::Emoji::INDEX_FILENAME = T.let(T.unsafe(nil), String)
Unicode::Emoji::LIST = T.let(T.unsafe(nil), Hash)
Unicode::Emoji::LIST_REMOVED_KEYS = T.let(T.unsafe(nil), Array)
Unicode::Emoji::PROPERTY_NAMES = T.let(T.unsafe(nil), Hash)
Unicode::Emoji::RECOMMENDED_SUBDIVISION_FLAGS = T.let(T.unsafe(nil), Array)
Unicode::Emoji::RECOMMENDED_ZWJ_SEQUENCES = T.let(T.unsafe(nil), Array)
Unicode::Emoji::REGEX = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_BASIC = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_EMOJI_KEYCAP = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_INCLUDE_MQE = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_INCLUDE_MQE_UQE = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_INCLUDE_TEXT = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_PICTO = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_PICTO_NO_EMOJI = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_POSSIBLE = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_PROP_COMPONENT = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_PROP_EMOJI = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_PROP_MODIFIER = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_PROP_MODIFIER_BASE = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_PROP_PRESENTATION = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_TEXT = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_TEXT_PRESENTATION = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_VALID = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_VALID_INCLUDE_TEXT = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_WELL_FORMED = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGEX_WELL_FORMED_INCLUDE_TEXT = T.let(T.unsafe(nil), Regexp)
Unicode::Emoji::REGIONAL_INDICATORS = T.let(T.unsafe(nil), Array)
Unicode::Emoji::SPEC_TAGS = T.let(T.unsafe(nil), Array)
Unicode::Emoji::TEXT_PRESENTATION = T.let(T.unsafe(nil), Array)
Unicode::Emoji::TEXT_VARIATION_SELECTOR = T.let(T.unsafe(nil), Integer)
Unicode::Emoji::VALID_REGION_FLAGS = T.let(T.unsafe(nil), Array)
Unicode::Emoji::VALID_SUBDIVISIONS = T.let(T.unsafe(nil), Array)
Unicode::Emoji::VERSION = T.let(T.unsafe(nil), String)
Unicode::Emoji::VISUAL_COMPONENT = T.let(T.unsafe(nil), Array)
Unicode::Emoji::ZWJ = T.let(T.unsafe(nil), Integer)
